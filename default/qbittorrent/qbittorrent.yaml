apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: default
spec:
  driftDetection:
    mode: enabled
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      annotations:
        k8s.v1.cni.cncf.io/networks: "qbittorrent-vpn"
    controllers:
      main:
        defaultContainerOptions:
          resources:
            requests:
              cpu: 10m
              memory: 250Mi
            limits:
              memory: 2Gi
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            fsGroup: 3001
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups: [568,911,1000,1001]
          tolerations:
            - key: "arm"
              operator: "Exists"
        containers:
          main:
            image:
              # renovate: repository=ghcr.io/onedr0p/qbittorrent
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 5.0.4
            securityContext:
              runAsUser: 1000
              runAsGroup: 3001
            env:
              TZ: America/New_York
              QBITTORRENT__PORT: &port 80
              QBITTORRENT__BT_PORT: &port-bt 6881
    service:
      main:
        # annotations:
          # traefik.ingress.kubernetes.io/service.nativelb: "true"
        controller: main
        type: ClusterIP
        ports:
          http:
            port: *port
      bittorrent:
        controller: main
        type: LoadBalancer
        externalIPs:
        - 10.0.101.5
        annotations:
          metallb.universe.tf/allow-shared-ip: "qbittorrent-share"
          metallb.universe.tf/address-pool: "default"
          metallb.universe.tf/loadBalancerIPs: 10.0.101.5
          cni.projectcalico.org/ipAddrs: '["10.0.101.5"]'
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
        externalTrafficPolicy: Cluster
    ingress:
      main:
        className: "traefik"
        # ingressClassName: nginx
        annotations:
        #   nginx.ingress.kubernetes.io/auth-url: "https://auth.homelab.heyser.xyz/oauth2/auth"
        #   nginx.ingress.kubernetes.io/auth-signin: https://auth.homelab.heyser.xyz/oauth2/start
          kubernetes.io/ingress.class: traefik
          traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
          # traefik.ingress.kubernetes.io/router.middlewares: "network-system-authentik@kubernetescrd"
        hosts:
        - host: &host "qbittorrent.homelab.heyser.xyz"
          paths:
          - path: /
            pathType: Prefix
            service: 
              identifier: main
              port: http
        tls:
        - hosts:
          - *host
          secretName: qbittorrent-homelab-heyser-xyz-tls
    # Note: If downloading very large torrents it might be worth using NFS for your download directory.
    # Beware if you are downloading torrents directly to a ZFS dataset that dataset will accrue fragmentation.
    persistence:
      config:
        existingClaim: qbittorrent-config
      downloads:
        existingClaim: qbittorrent-downloads
      media:
        existingClaim: qbittorrent-media
      incomplete:
        type: emptyDir
