apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: network-system
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2024.10.5
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      affinity:
        podAntiAffinity: hard
      envFrom:
        - secretRef:
            name: authentik-secret-key
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Equal
          effect: NoSchedule
        - effect: PreferNoSchedule
          key: node-role.kubernetes.io
          value: master
    deploymentStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
    server:
      replicas: 3
      pdb:
        enabled: true
        minAvailable: 1
      service:
        annotations:
          traefik.ingress.kubernetes.io/service.nativelb: "true"
      ingress:
        ingressClassName: traefik
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
          # traefik.ingress.kubernetes.io/router.tls: "true"
          # traefik.ingress.kubernetes.io/router.tls.certresolver: "letsencrypt-prod"
          traefik.ingress.kubernetes.io/router.middlewares: ""
        # hosts:
        # - host: &host "auth.homelab.heyser.xyz"
        #   paths:
        #   - path: "/"
        #     pathType: Prefix
        hosts:
          - &host "auth.homelab.heyser.xyz"
          - &althost "authentik.homelab.heyser.xyz"
        tls:
        - hosts:
            - *host
            - *althost
          secretName: authentik-homelab-heyser-xyz-tls
    worker:
      replicas: 3
      pdb:
        enabled: true
        minAvailable: 1
    postgresql:
      enabled: true
      global:
        defaultStorageClass: nfs-dynamic
      auth:
        existingSecret: "authentik-credentials"
        secretKeys:
          adminPasswordKey: "adminPassword"
          userPasswordKey: "userPassword"
          replicationPasswordKey: "replicationPassword"
      primary:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - primary
              topologyKey: "kubernetes.io/hostname"
        persistence:
          enabled: true
          existingClaim: "authentik-postgresql-data-claim"
      readReplicas:
        replicaCount: 3
        persistence:
          enabled: true
          storageClass: nfs-dynamic-ss
          size: 10Gi
          annotations:
            nfs.io/storage-path: "containers/kubernetes/authentik/postgresql-readreplicas"
      volumePermissions:
        enabled: true
      backup:
        enabled: true
        storage:
          enabled: true
          storageClass: nfs-dynamic-ss
          size: 100Gi
          annotations:
            nfs.io/storage-path: "containers/kubernetes/authentik/postgresql-backup"
    redis:
      enabled: true
      global:
        defaultStorageClass: nfs-dynamic
      auth:
        enabled: false
      master:
        persistence:
          enabled: true
          annotations:
            nfs.io/storage-path: "containers/kubernetes/authentik/redis"
          storageClass: nfs-dynamic
          size: 10Gi
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - master
              topologyKey: "kubernetes.io/hostname"
