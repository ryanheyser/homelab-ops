---
# Source: adguard-home/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adguard-home
  namespace: network-system
  labels:
    app.kubernetes.io/instance: adguard
    app.kubernetes.io/name: adguard-home
spec:
  revisionHistoryLimit: 3
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: adguard-home
      app.kubernetes.io/instance: adguard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: adguard-home
        app.kubernetes.io/instance: adguard
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - adguard-home
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - command:
          - sh
          - -c
          - |
            if [ ! -f /opt/adguardhome/conf/AdGuardHome.yaml ]; then
              mkdir -p /opt/adguardhome/conf
              cp /tmp/AdGuardHome.yaml /opt/adguardhome/conf/AdGuardHome.yaml
            fi
          image: busybox
          imagePullPolicy: IfNotPresent
          name: copy-configmap
          securityContext:
            runAsUser: 0
          volumeMounts:
          - mountPath: /tmp/AdGuardHome.yaml
            name: adguard-home-config
            subPath: AdGuardHome.yaml
          - mountPath: /opt/adguardhome/conf
            name: config
      containers:
      - name: adguard-home
        # renovate: repository=adguard/adguardhome
        image: "adguard/adguardhome:v0.107.56"
        imagePullPolicy: IfNotPresent
        args:
        - --config
        - /opt/adguardhome/conf/AdGuardHome.yaml
        - --work-dir
        - /opt/adguardhome/work
        - --no-check-update
        env:
        - name: TZ
          value: America/New York
        ports:
        - name: dns-tcp
          containerPort: 53
          protocol: TCP
        - name: dns-tls-tcp
          containerPort: 853
          protocol: TCP
        - name: dns-udp
          containerPort: 53
          protocol: UDP
        - name: dns-quic-udp
          containerPort: 784
          protocol: UDP
        - name: http
          containerPort: 3000
          protocol: TCP
        volumeMounts:
        - name: adguard-home-config
          mountPath: /tmp/AdGuardHome.yaml
          subPath: AdGuardHome.yaml
        - name: config
          mountPath: /opt/adguardhome/conf
        - name: certificate
          mountPath: /opt/adguardcertificate
          readOnly: true
        resources:
          limits:
            cpu: "2"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "256Mi"
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 0
          failureThreshold: 3
          timeoutSeconds: 1
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 0
          failureThreshold: 3
          timeoutSeconds: 1
          periodSeconds: 10
        startupProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 0
          failureThreshold: 30
          timeoutSeconds: 1
          periodSeconds: 5
      volumes:
      - name: adguard-home-config
        configMap:
          name: adguard-home-config
      - name: config
        emptyDir:
          medium: Memory
      - name: certificate
        secret:
          secretName: adguard-homelab-heyser-xyz-tls
          optional: false
      tolerations:
      - effect: PreferNoSchedule
        key: node-role.kubernetes.io
        value: master
      - key: node-role.kubernetes.io/control-plane
        operator: Equal
        effect: NoSchedule
