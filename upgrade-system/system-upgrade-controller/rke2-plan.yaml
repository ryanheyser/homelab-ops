# Server plan
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: rke2-server
  namespace: upgrade-system
  labels:
    rke2-upgrade: server
spec:
  concurrency: 1
  channel: https://update.rke2.io/v1-release/channels/stable
  # renovate: depName=rancher/rke2
  version: v1.32.5+rke2r1
  cordon: true
  nodeSelector:
    matchExpressions:
    - {key: node-role.kubernetes.io/control-plane, operator: In, values: ["true"]}
  serviceAccountName: system-upgrade
  tolerations:
  - key: "node-role.kubernetes.io/master"
    operator: "Exists"
  - {key: kubernetes.io/arch, effect: NoSchedule, operator: Equal, value: amd64}
  - {key: kubernetes.io/arch, effect: NoSchedule, operator: Equal, value: arm64}
  - {key: kubernetes.io/arch, effect: NoSchedule, operator: Equal, value: arm}
  - {key: arm, operator: Exists}
  - key: node-role.kubernetes.io/control-plane
    operator: Equal
    effect: NoSchedule
  - effect: PreferNoSchedule
    key: node-role.kubernetes.io
    value: master
  - key: node-role.kubernetes.io/etcd
    operator: Equal
    effect: NoSchedule
  # drain:
  #   force: true
  upgrade:
    image: rancher/rke2-upgrade
---
# Agent plan
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: rke2-agent
  namespace: upgrade-system
  labels:
    rke2-upgrade: agent
spec:
  concurrency: 1
  channel: https://update.rke2.io/v1-release/channels/stable
  # renovate: depName=rancher/rke2
  version: v1.33.1+rke2r1
  nodeSelector:
    matchExpressions:
    - {key: beta.kubernetes.io/os, operator: In, values: ["linux"]}
    - {key: node-role.kubernetes.io/master, operator: NotIn, values: ["true"]}
    - {key: node-role.kubernetes.io/control-plane, operator: DoesNotExist}
    - {key: node-role.kubernetes.io/etcd, operator: DoesNotExist}
  serviceAccountName: system-upgrade

  # Specify which node taints should be tolerated by pods applying the upgrade.
  # Anything specified here is appended to the default of:
  # - {key: node.kubernetes.io/unschedulable, effect: NoSchedule, operator: Exists}
  tolerations:
  - {key: kubernetes.io/arch, effect: NoSchedule, operator: Equal, value: amd64}
  - {key: kubernetes.io/arch, effect: NoSchedule, operator: Equal, value: arm64}
  - {key: kubernetes.io/arch, effect: NoSchedule, operator: Equal, value: arm}
  - {key: arm, operator: Exists}

  prepare:
    # Since v0.5.0-m1 SUC will use the resolved version of the plan for the tag on the prepare container.
    # image: rancher/k3s-upgrade:v1.17.4-k3s1
    image: rancher/rke2-upgrade
    args: ["prepare", "rke2-server"]
  upgrade:
    image: rancher/rke2-upgrade
